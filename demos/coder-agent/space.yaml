# Coder Agent Demo Space - With Approval Required for File Modifications
space:
  id: coder-demo
  name: "Coder Agent Demo"
  description: "Coding assistant that requires human approval for file modifications"
  default_participant: human

participants:
  # Human participant with full capabilities (can approve proposals)
  human:
    tokens: 
      - human-token
    capabilities:
      - kind: "*"  # Full capabilities including proposal approval
      
  # Coder agent with limited capabilities - creates proposals for file modifications
  coder-agent:
    type: local
    command: "node"
    args: ["../../sdk/typescript-sdk/agent/dist/index.js", "--gateway", "ws://localhost:${PORT}", "--space", "coder-space", "--token", "coder-token", "--id", "coder-agent"]
    auto_start: true
    tokens:
      - coder-token
    capabilities:
      - kind: "chat"
      - kind: "reasoning/*"
      - kind: "mcp/proposal"
      - kind: "mcp/response"
      - kind: "mcp/request"
        payload:
          method: "!tools/call"
  
  # MCP Bridge for file system access - executes approved proposals
  mcp-fs-bridge:
    type: local
    command: "npx"
    args: ["@modelcontextprotocol/server-filesystem", "./workspace"]
    auto_start: true
    tokens:
      - mcp-bridge-token
    capabilities:
      - kind: "mcp/request"
      - kind: "mcp/response"
      - kind: "mcp/notification"

  # Optional: Auto-approver for read operations (security: only allows reads)
  read-approver:
    type: local
    command: "node"
    args: ["./read-approver.js", "--gateway", "ws://localhost:${PORT}", "--space", "coder-demo", "--token", "read-approver-token"]
    auto_start: false  # Set to true if you want automatic approval of read operations
    tokens:
      - read-approver-token
    capabilities:
      - kind: "mcp/proposal"  # Can see proposals
      - kind: "mcp/request"   # Can execute approved operations
      - kind: "mcp/response"  # Can respond to requests

defaults:
  capabilities:
    - kind: "chat"  # Everyone can chat by default